<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Performance Dashboard - Student</title>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels@2"></script>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Inter', sans-serif;
            background: #f8fafc;
            color: #333;
        }

        .navbar {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 0.75rem 1.5rem;
            display: flex;
            justify-content: space-between;
            align-items: center;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        .navbar h1 {
            font-size: 1.25rem;
            font-weight: 600;
        }

        .navbar .user-info {
            display: flex;
            align-items: center;
            gap: 1rem;
            font-size: 0.875rem;
        }

        .navbar a {
            color: white;
            text-decoration: none;
            padding: 0.375rem 0.75rem;
            border-radius: 4px;
            transition: background-color 0.2s ease;
            font-size: 0.875rem;
        }

        .navbar a:hover {
            background-color: rgba(255, 255, 255, 0.1);
        }

        .container {
            max-width: 1200px;
            margin: 1.5rem auto;
            padding: 0 1.5rem;
        }

        .page-header {
            text-align: center;
            margin-bottom: 2rem;
        }

        .page-title {
            font-size: 2rem;
            font-weight: 700;
            color: #1a202c;
            margin-bottom: 0.5rem;
        }

        .page-subtitle {
            color: #718096;
            font-size: 1rem;
        }

        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 1.5rem;
            margin-bottom: 2rem;
        }

        .stat-card {
            background: white;
            padding: 1.5rem;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            border: 1px solid #e2e8f0;
            text-align: center;
        }

        .stat-icon {
            font-size: 2rem;
            margin-bottom: 1rem;
        }

        .stat-value {
            font-size: 2rem;
            font-weight: 700;
            color: #2d3748;
            margin-bottom: 0.5rem;
        }

        .stat-label {
            color: #718096;
            font-size: 0.875rem;
            font-weight: 500;
        }

        .stat-excellent .stat-icon {
            color: #38a169;
        }

        .stat-good .stat-icon {
            color: #d69e2e;
        }

        .stat-info .stat-icon {
            color: #3182ce;
        }

        .stat-warning .stat-icon {
            color: #e53e3e;
        }

        .charts-section {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 1.5rem;
            margin-bottom: 2rem;
        }

        .chart-card {
            background: white;
            padding: 1.5rem;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            border: 1px solid #e2e8f0;
            max-width: 420px;
            margin: 0 auto;
        }

        .chart-card canvas {
            max-width: 350px;
            max-height: 260px;
            margin: 0 auto;
            display: block;
        }

        .chart-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 1rem;
        }

        .chart-title {
            font-size: 1.125rem;
            font-weight: 600;
            color: #2d3748;
        }

        .assignments-section {
            background: white;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            overflow: hidden;
            border: 1px solid #e2e8f0;
        }

        .section-header {
            background: #f8f9fa;
            padding: 1rem 1.5rem;
            border-bottom: 1px solid #e9ecef;
        }

        .section-header h3 {
            color: #333;
            margin: 0;
            font-size: 1.125rem;
            font-weight: 600;
        }

        .assignments-table {
            width: 100%;
            border-collapse: collapse;
        }

        .assignments-table th,
        .assignments-table td {
            padding: 0.75rem 1rem;
            text-align: left;
            border-bottom: 1px solid #e9ecef;
            font-size: 0.875rem;
        }

        .assignments-table th {
            background: #f8f9fa;
            font-weight: 600;
            color: #333;
        }

        .assignments-table tr:hover {
            background: #f8f9fa;
        }

        .grade-badge {
            padding: 0.25rem 0.5rem;
            border-radius: 12px;
            font-size: 0.75rem;
            font-weight: 600;
            text-align: center;
            min-width: 60px;
        }

        .grade-excellent {
            background: #d4edda;
            color: #155724;
        }

        .grade-good {
            background: #fff3cd;
            color: #856404;
        }

        .grade-needs-improvement {
            background: #f8d7da;
            color: #721c24;
        }

        .grade-pending {
            background: #e2e3e5;
            color: #6c757d;
        }

        .progress-bar {
            width: 100%;
            height: 8px;
            background: #e2e8f0;
            border-radius: 4px;
            overflow: hidden;
            margin-top: 0.5rem;
        }

        .progress-fill {
            height: 100%;
            background: linear-gradient(90deg, #667eea 0%, #764ba2 100%);
            transition: width 0.3s ease;
        }

        .back-btn {
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            padding: 0.5rem 1rem;
            background: #6c757d;
            color: white;
            text-decoration: none;
            border-radius: 6px;
            font-size: 0.875rem;
            font-weight: 500;
            transition: all 0.2s ease;
            margin-bottom: 1rem;
        }

        .back-btn:hover {
            background: #5a6268;
            transform: translateY(-1px);
        }

        .empty-state {
            text-align: center;
            padding: 2rem;
            color: #666;
        }

        .empty-state h4 {
            margin-bottom: 0.75rem;
            color: #333;
            font-size: 1.125rem;
        }

        .empty-state p {
            margin-bottom: 1rem;
            font-size: 0.875rem;
        }

        @media (max-width: 768px) {
            .navbar {
                flex-direction: column;
                gap: 0.75rem;
                text-align: center;
                padding: 1rem;
            }

            .container {
                padding: 0 1rem;
            }

            .charts-section {
                grid-template-columns: 1fr;
            }

            .page-title {
                font-size: 1.5rem;
            }

            .stats-grid {
                grid-template-columns: repeat(2, 1fr);
            }
        }

        @media (max-width: 900px) {
            .charts-section {
                grid-template-columns: 1fr;
            }
            .chart-card {
                max-width: 100%;
            }
            .chart-card canvas {
                max-width: 100%;
                max-height: 220px;
            }
        }

        :root {
            --bg: #f4f6f8;
            --text: #222;
            --card: #fff;
            --navbar: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            --btn: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            --input-bg: #f7fafc;
            --input-border: #e2e8f0;
        }
        body {
            background: var(--bg);
            color: var(--text);
            transition: background 0.3s, color 0.3s;
        }
        .dark-mode {
            --bg: #181a1b;
            --text: #f4f6f8;
            --card: #23272f;
            --navbar: linear-gradient(135deg, #23272f 0%, #181a1b 100%);
            --btn: linear-gradient(135deg, #23272f 0%, #181a1b 100%);
            --input-bg: #23272f;
            --input-border: #444950;
        }
        .navbar { background: var(--navbar); }
        .container, .profile-card, .upload-card, .page-header, .stat-card, .assignments-section, .uploads-section, .main-content, .welcome-section {
            background: var(--card) !important;
            color: var(--text) !important;
        }
        input, select, textarea {
            background: var(--input-bg) !important;
            color: var(--text) !important;
            border-color: var(--input-border) !important;
        }
    </style>
</head>
<body>
    <nav class="navbar">
        <h1><i class="fas fa-graduation-cap"></i> Assignment Portal</h1>
        <div class="user-info">
            <span>Welcome, <%= user.username %></span>
            <button id="theme-toggle" aria-label="Toggle dark mode" style="background:none;border:none;cursor:pointer;font-size:1.3rem;margin:0 0.5rem;vertical-align:middle;">
                <span id="theme-icon">ðŸŒž</span>
            </button>
            <a href="/dashboard"><i class="fas fa-home"></i> Dashboard</a>
            <a href="/assignments"><i class="fas fa-book"></i> Assignments</a>
            <a href="/logout"><i class="fas fa-sign-out-alt"></i> Logout</a>
        </div>
    </nav>

    <div class="container">
        <div class="page-header">
            <h1 class="page-title">Performance Dashboard</h1>
            <p class="page-subtitle">Track your academic progress and performance</p>
        </div>

        <a href="/dashboard" class="back-btn">
            <i class="fas fa-arrow-left"></i>
            Back to Dashboard
        </a>

        <!-- Statistics Cards -->
        <div class="stats-grid">
            <div class="stat-card stat-info">
                <div class="stat-icon">
                    <i class="fas fa-file-upload"></i>
                </div>
                <div class="stat-value"><%= analytics.totalSubmissions %></div>
                <div class="stat-label">Total Submissions</div>
            </div>

            <div class="stat-card stat-good">
                <div class="stat-icon">
                    <i class="fas fa-star"></i>
                </div>
                <div class="stat-value"><%= analytics.totalGraded %></div>
                <div class="stat-label">Graded Assignments</div>
            </div>

            <div class="stat-card stat-excellent">
                <div class="stat-icon">
                    <i class="fas fa-chart-line"></i>
                </div>
                <div class="stat-value"><%= analytics.averageGrade %></div>
                <div class="stat-label">Average Grade</div>
            </div>

            <div class="stat-card stat-warning">
                <div class="stat-icon">
                    <i class="fas fa-calendar"></i>
                </div>
                <div class="stat-value"><%= analytics.recentSubmissions %></div>
                <div class="stat-label">Recent (30 days)</div>
            </div>
        </div>

        <!-- Charts Section -->
        <div class="charts-section">
            <div class="chart-card">
                <div class="chart-header">
                    <h3 class="chart-title">Grade Distribution</h3>
                </div>
                <canvas id="gradeChart" width="400" height="200"></canvas>
            </div>

            <div class="chart-card">
                <div class="chart-header">
                    <h3 class="chart-title">Assignment Types</h3>
                </div>
                <canvas id="typeChart" width="400" height="200"></canvas>
            </div>
        </div>

        <!-- Assignments with Grades -->
        <div class="assignments-section">
            <div class="section-header">
                <h3><i class="fas fa-list"></i> Assignment History</h3>
            </div>

            <% if (assignments.length === 0) { %>
                <div class="empty-state">
                    <h4>No assignments submitted yet</h4>
                    <p>Start by uploading your first assignment!</p>
                    <a href="/upload" class="btn"><i class="fas fa-upload"></i> Upload Assignment</a>
                </div>
            <% } else { %>
                <table class="assignments-table">
                    <thead>
                        <tr>
                            <th>Assignment Title</th>
                            <th>Course</th>
                            <th>Type</th>
                            <th>Submitted</th>
                            <th>Grade</th>
                            <th>Feedback</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% assignments.forEach(assignment => { %>
                            <tr>
                                <td><strong><%= assignment.title %></strong></td>
                                <td><%= assignment.course %></td>
                                <td><%= assignment.assignmentType || 'Homework' %></td>
                                <td>
                                    <div class="timestamp">
                                        <span class="date"><%= assignment.createdAt.toLocaleDateString() %></span>
                                        <span class="time"><%= assignment.createdAt.toLocaleTimeString() %></span>
                                    </div>
                                </td>
                                <td>
                                    <% if (assignment.grade !== null) { %>
                                        <span class="grade-badge grade-<%= assignment.grade >= 8 ? 'excellent' : assignment.grade >= 6 ? 'good' : 'needs-improvement' %>">
                                            <%= assignment.grade %>/10
                                        </span>
                                    <% } else { %>
                                        <span class="grade-badge grade-pending">Not Graded</span>
                                    <% } %>
                                </td>
                                <td>
                                    <% if (assignment.feedback) { %>
                                        <span style="color: #666; font-size: 0.875rem;"><%= assignment.feedback %></span>
                                    <% } else { %>
                                        <span style="color: #999; font-style: italic;">No feedback</span>
                                    <% } %>
                                </td>
                            </tr>
                        <% }); %>
                    </tbody>
                </table>
            <% } %>
        </div>
    </div>

    <script>
        // Grade Distribution Chart
        const gradeCtx = document.getElementById('gradeChart').getContext('2d');
        const gradeData = {
            labels: ['0-2', '3-4', '5-6', '7-8', '9-10'],
            datasets: [{
                label: 'Number of Assignments',
                data: [0, 0, 0, 0, 0], // Will be populated with actual data
                backgroundColor: [
                    '#e53e3e',
                    '#dd6b20',
                    '#d69e2e',
                    '#38a169',
                    '#2f855a'
                ],
                borderWidth: 1
            }]
        };

        const gradeChart = new Chart(gradeCtx, {
            type: 'bar',
            data: gradeData,
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: { display: false },
                    title: {
                        display: true,
                        text: 'Grade Distribution',
                        font: { size: 16, weight: 'bold' }
                    },
                    tooltip: { enabled: true },
                    datalabels: {
                        anchor: 'end',
                        align: 'top',
                        color: '#333',
                        font: { weight: 'bold' },
                        formatter: function(value) { return value > 0 ? value : ''; }
                    }
                },
                scales: {
                    x: {
                        title: {
                            display: true,
                            text: 'Grade Range',
                            font: { size: 13 }
                        }
                    },
                    y: {
                        beginAtZero: true,
                        title: {
                            display: true,
                            text: 'Number of Assignments',
                            font: { size: 13 }
                        },
                        ticks: { stepSize: 1 }
                    }
                }
            },
            plugins: [ChartDataLabels]
        });

        // Assignment Types Chart
        const typeCtx = document.getElementById('typeChart').getContext('2d');
        const typeData = {
            labels: ['Homework', 'Project', 'Quiz', 'Exam'],
            datasets: [{
                label: 'Number of Assignments',
                data: [0, 0, 0, 0], // Will be populated with actual data
                backgroundColor: [
                    '#667eea',
                    '#764ba2',
                    '#f093fb',
                    '#f5576c'
                ],
                borderWidth: 1
            }]
        };

        const typeChart = new Chart(typeCtx, {
            type: 'doughnut',
            data: typeData,
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        position: 'bottom',
                        labels: { font: { size: 13 } }
                    },
                    title: {
                        display: true,
                        text: 'Assignment Types',
                        font: { size: 16, weight: 'bold' }
                    },
                    tooltip: { enabled: true },
                    datalabels: {
                        color: '#333',
                        font: { weight: 'bold' },
                        formatter: function(value, ctx) {
                            return value > 0 ? value : '';
                        }
                    }
                }
            },
            plugins: [ChartDataLabels]
        });

        // Populate charts with actual data
        const assignments = <%- JSON.stringify(assignments) %>;
        const analytics = <%- JSON.stringify(analytics) %>;

        // Calculate grade distribution
        const gradeDistribution = [0, 0, 0, 0, 0];
        assignments.forEach(assignment => {
            if (assignment.grade !== null) {
                if (assignment.grade <= 2) gradeDistribution[0]++;
                else if (assignment.grade <= 4) gradeDistribution[1]++;
                else if (assignment.grade <= 6) gradeDistribution[2]++;
                else if (assignment.grade <= 8) gradeDistribution[3]++;
                else gradeDistribution[4]++;
            }
        });

        // Calculate assignment types
        const typeDistribution = [0, 0, 0, 0];
        assignments.forEach(assignment => {
            const type = assignment.assignmentType || 'Homework';
            switch(type) {
                case 'Homework': typeDistribution[0]++; break;
                case 'Project': typeDistribution[1]++; break;
                case 'Quiz': typeDistribution[2]++; break;
                case 'Exam': typeDistribution[3]++; break;
            }
        });

        // Update charts
        gradeChart.data.datasets[0].data = gradeDistribution;
        gradeChart.update();

        typeChart.data.datasets[0].data = typeDistribution;
        typeChart.update();

        // Show a message if there is no data
        if (assignments.length === 0) {
            document.getElementById('gradeChart').parentNode.innerHTML = '<div style="text-align:center;color:#888;padding:2rem;">No data to display</div>';
            document.getElementById('typeChart').parentNode.innerHTML = '<div style="text-align:center;color:#888;padding:2rem;">No data to display</div>';
        }

        (function() {
            const root = document.documentElement;
            const themeToggle = document.getElementById('theme-toggle');
            const themeIcon = document.getElementById('theme-icon');
            function setTheme(dark) {
                if (dark) {
                    document.body.classList.add('dark-mode');
                    themeIcon.textContent = 'ðŸŒ™';
                } else {
                    document.body.classList.remove('dark-mode');
                    themeIcon.textContent = 'ðŸŒž';
                }
            }
            // Load preference
            const darkPref = localStorage.getItem('theme') === 'dark';
            setTheme(darkPref);
            themeToggle.addEventListener('click', function() {
                const isDark = document.body.classList.toggle('dark-mode');
                localStorage.setItem('theme', isDark ? 'dark' : 'light');
                themeIcon.textContent = isDark ? 'ðŸŒ™' : 'ðŸŒž';
            });
        })();
    </script>
</body>
</html> 